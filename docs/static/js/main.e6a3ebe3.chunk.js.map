{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","utils.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GIfExpertApp.js","index.js"],"names":["AddCategory","onSubmit","useState","inputValue","setInputValue","e","preventDefault","trim","length","type","value","onChange","target","getGifs","query","a","fetch","encodeURI","response","json","data","map","gif","id","title","url","images","downsized_medium","useFetchGifs","category","done","state","setState","useEffect","then","gifs","GifGridItem","className","src","alt","GifGrid","img","key","GifExperApp","categories","setCategories","cat","idx","ReactDOM","render","document","getElementById"],"mappings":"qMA+BeA,MA5Bf,YAAoC,IAAbC,EAAY,EAAZA,SAAY,EACGC,mBAAS,IADZ,mBAC1BC,EAD0B,KACdC,EADc,KAcjC,OACE,oCACE,0BAAMH,SATW,SAACI,GACpBA,EAAEC,iBACEH,EAAWI,OAAOC,OAAS,IAC/BP,EAASE,GACTC,EAAc,OAMV,2BAAOK,KAAK,OAAOC,MAAOP,EAAYQ,SAdvB,SAACN,GACpBD,EAAcC,EAAEO,OAAOF,UAcnB,4BAAQD,KAAK,UAAb,U,uBCDOI,EAlBF,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sEACSC,MAAM,0CAAD,OACgBC,UACxCH,GAFwB,6BCHd,qCDEA,cACRI,EADQ,gBAOSA,EAASC,OAPlB,uBAONC,EAPM,EAONA,KAPM,kBASPA,EAAKC,KAAI,SAACC,GACf,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBF,SAbvB,2CAAH,sDEgBEG,MAff,SAAsBC,GAAW,IAAD,EACJ3B,mBAAS,CACjCkB,KAAM,GACNU,MAAM,IAHsB,mBACvBC,EADuB,KAChBC,EADgB,KAY9B,OANAC,qBAAU,WACRpB,EAAQgB,GAAUK,MAAK,SAACC,GACtBH,EAAS,CAAEF,MAAM,EAAMV,KAAMe,SAE9B,CAACN,IAEGE,GCJMK,MATf,YAAyC,EAAlBb,GAAmB,IAAfC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IAChC,OACE,yBAAKY,UAAU,4CACb,yBAAKC,IAAKb,EAAKc,IAAKf,IACpB,2BAAIA,KCkBKgB,MAnBf,YAAgC,IAAbX,EAAY,EAAZA,SAAY,EACED,EAAaC,GAA9BH,EADe,EACrBN,KAAcU,EADO,EACPA,KAEtB,OACE,yBAAKO,UAAU,uBACb,wBAAIA,UAAU,yCAAyCR,GACvD,yBAAKQ,UAAU,cACXP,GACA,uBAAGO,UAAU,oCAAb,cAGDX,EAAOL,KAAI,SAACoB,GAAD,OACV,kBAAC,EAAD,eAAaC,IAAKD,EAAIlB,IAAQkB,UCQzBE,MArBf,WAAwB,IAAD,EACezC,mBAAS,CAAC,kBADzB,mBACd0C,EADc,KACFC,EADE,KAOrB,OACE,oCACE,0CACA,6BACA,kBAAC,EAAD,CAAa5C,SARC,SAAC4B,GACjBgB,EAAc,CAAChB,GAAF,mBAAee,QAQ1B,4BACGA,EAAWvB,KAAI,SAACyB,EAAKC,GAAN,OACd,kBAAC,EAAD,CAASlB,SAAUiB,EAAKJ,IAAG,UAAKI,EAAL,YAAYC,WCbjDC,IAASC,OAEP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.e6a3ebe3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction AddCategory({ onSubmit }) {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length < 3) return;\n    onSubmit(inputValue);\n    setInputValue(\"\");\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={inputValue} onChange={handleChange} />\n        <button type=\"submit\">Add</button>\n      </form>\n    </>\n  );\n}\n\nAddCategory.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","import { API_KEY } from \"../utils\";\n\nconst getGifs = async (query) => {\n  const response = await fetch(\n    `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n      query\n    )}&limit=10&api_key=${API_KEY}`\n  );\n\n  const { data } = await response.json();\n\n  return data.map((gif) => {\n    return {\n      id: gif.id,\n      title: gif.title,\n      url: gif.images.downsized_medium.url,\n    };\n  });\n};\n\nexport default getGifs;\n","const API_KEY = \"O8JZZEThvuiIMrcSEuOgHAhnBD1szm8p\";\n\nexport { API_KEY };\n","import { useEffect, useState } from \"react\";\nimport getGifs from \"../helpers/GetGifs\";\n\nfunction useFetchGifs(category) {\n  const [state, setState] = useState({\n    data: [],\n    done: false,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((gifs) => {\n      setState({ done: true, data: gifs });\n    });\n  }, [category]);\n\n  return state;\n}\n\nexport default useFetchGifs;\n","import React from \"react\";\n\nfunction GifGridItem({ id, title, url }) {\n  return (\n    <div className=\"card animate__animated animate__fadeInUp\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n}\n\nexport default GifGridItem;\n","import React from \"react\";\nimport useFetchGifs from \"../hooks/useFetchGifs\";\nimport GifGridItem from \"./GifGridItem\";\n// import getGifs from \"../helpers/GetGifs\";\n\nfunction GifGrid({ category }) {\n  const { data: images, done } = useFetchGifs(category);\n\n  return (\n    <div className=\"card-grid-container\">\n      <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\n      <div className=\"card-grid\">\n        {!done && (\n          <p className=\"animate__animated animate__flash\">Loading...</p>\n        )}\n\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default GifGrid;\n// +55 94 9102-3534 Ana\n","import React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\nfunction GifExperApp() {\n  const [categories, setCategories] = useState([\"One punch man\"]);\n\n  const handleAdd = (category) => {\n    setCategories([category, ...categories]);\n  };\n\n  return (\n    <>\n      <h2>Gif Expert</h2>\n      <hr />\n      <AddCategory onSubmit={handleAdd} />\n      <ol>\n        {categories.map((cat, idx) => (\n          <GifGrid category={cat} key={`${cat}-${idx}`} />\n        ))}\n      </ol>\n    </>\n  );\n}\n\nexport default GifExperApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GifExperApp from \"./GIfExpertApp\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <GifExperApp />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}